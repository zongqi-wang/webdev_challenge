{"version":3,"sources":["components/Button.js","components/Movies.js","components/Navbar.js","components/Nominations.js","App.js","reportWebVitals.js","index.js"],"names":["Button","movie","text","onClick","className","Moviecards","props","info","src","Poster","alt","Title","Year","Movies","movies","onAdd","map","imdbID","Navbar","searchSubmit","handleQuery","action","onSubmit","bind","this","type","id","placeholder","autoComplete","onChange","Nominations","nominations","onDel","noms","nomination","App","useEffect","document","title","useState","searchQuery","query","updateQuery","setMovies","e","a","preventDefault","url","fetch","res","json","data","target","reset","Response","results","Search","ids","Set","i","length","has","splice","add","alert","Type","value","console","log","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72a1b421.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./button.css\";\n\nconst Button = ({ movie, text, onClick }) => {\n  return (\n    <button onClick={() => onClick(movie)} className=\"btn\">\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  movie: PropTypes.object,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","// import Moviecards from \"./Moviecards\";\nimport \"./Movies.css\";\nimport Button from \"./Button.js\";\n\nconst Movies = ({ movies, onAdd }) => {\n  const onClick = () => {\n    console.log(\"clicked\");\n  };\n\n  return (\n    <div className=\"movie-panel\">\n      <h1>Search Results</h1>\n\n      {movies.map((movie) => (\n        <Moviecards\n          key={movie.imdbID}\n          movie={movie}\n          onClick={onAdd}\n        ></Moviecards>\n      ))}\n    </div>\n  );\n};\n\nconst Moviecards = (props) => {\n  const info = props.movie;\n\n  return (\n    <div className=\"movie-card\">\n      <img src={info.Poster} alt=\"movie poster\"></img>\n      <h3 className=\"title\">{info.Title}</h3>\n      <h4 className=\"year\">{info.Year}</h4>\n      <Button movie={info} text=\"Nominate\" onClick={props.onClick}></Button>\n    </div>\n  );\n};\n\nexport default Movies;\n","import \"./navbar.css\";\n\nfunction Navbar({ searchSubmit, handleQuery }) {\n  return (\n    <nav>\n      <div className=\"navbar\">\n        <h1 className=\"navbar-title\">The Shoppies</h1>\n        <form\n          className=\"search-bar\"\n          action=\"\"\n          onSubmit={searchSubmit.bind(this)}\n        >\n          <input\n            type=\"text\"\n            id=\"search\"\n            className=\"search-box\"\n            placeholder=\"Search Movies by Titles\"\n            autoComplete=\"off\"\n            onChange={handleQuery}\n          />\n        </form>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./nominations.css\";\nimport Button from \"./Button.js\";\n\nconst Nominations = ({ nominations, onDel }) => {\n  const noms = nominations;\n\n  return (\n    <div className=\"Nominations\">\n      <h1>Your Nominations</h1>\n      <ul>\n        {noms.map((nomination) => (\n          <li className=\"nom\">\n            <p key={nomination.Title}>{nomination.Title}</p>\n            <Button text=\"X\" onClick={onDel} movie={nomination} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Nominations;\n","import \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport Navbar from \"./components/Navbar\";\nimport Nominations from \"./components/Nominations\";\nimport { useState, useEffect} from \"react\";\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"The Shoppies\";\n  }, [])\n\n  //state for movie query\n  const [query, updateQuery] = useState({searchQuery: \"\"});\n\n  //state for movies on display\n  const [movies, setMovies] = useState([]);\n  //update state from search bar\n  const handleQuery = (e) =>{\n    updateQuery({\n      searchQuery: e.target.value\n    });\n  }\n\n  //get movies from search fields using API\n  async function getMoveis(e) {\n    e.preventDefault();\n    //use URL to get movies\n    const title = query.searchQuery;\n    let url = `http://www.omdbapi.com/?s=${title}&type=movie&apikey=1d2f8dca`;\n    const res = await fetch(url);\n    const data = await res.json();\n    //reset fields\n    e.target.reset();\n    updateQuery({searchQuery: \"\"})\n\n    //getting correct data\n    if(data.Response === \"True\"){\n      const results = data.Search;\n\n      //look for unique items for corner case such as \n      //searching 'hello' produces duplicates\n      const ids = new Set();\n      for(var i=0; i<results.length; i++) {\n        if(!ids.has(results[i]['imdbID'])){\n          ids.add(results[i]['imdbID']);\n        }else{\n          results.splice(i, 1);\n        }\n      }\n      setMovies(results);\n    }\n    else{\n      alert(\"Too many results. Please enter a longer input.\");\n    }\n    \n    \n  }\n\n\n\n\n  //handle button click\n  const addNom = (movie) => {\n    console.log(\"nominated\")\n    console.log(movie);\n  };\n\n  const delNom = (movie) => {\n    console.log(\"deleted\")\n    console.log(movie)\n  };\n\n  \n\n  const [nominations, setNom] = useState([\n    {\n      Title: \"The Avengers\",\n      Year: \"2012\",\n      imdbID: \"tt0848228\",\n      Type: \"movie\",\n      Poster:\n        \"https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg\",\n    },\n    {\n      Title: \"Avengers: Infinity War\",\n      Year: \"2018\",\n      imdbID: \"tt4154756\",\n      Type: \"movie\",\n      Poster:\n        \"https://m.media-amazon.com/images/M/MV5BMjMxNjY2MDU1OV5BMl5BanBnXkFtZTgwNzY1MTUwNTM@._V1_SX300.jpg\",\n    }\n  ]);\n\n  return (\n    <div className=\"wrapper\">\n      <Navbar searchSubmit = {getMoveis} handleQuery = {handleQuery} />\n      <div className = \"banner\" className = \"hidden\">\n        <p>You have added 5 nominations!</p>\n      </div>\n      <main>\n        <div className=\"container\">\n          <Movies movies={movies} onAdd = {addNom} />\n          <Nominations nominations={nominations} onDel={delNom} />\n        </div>\n      </main>\n      <footer>\n        <ul>\n          <li><a href=\"https://github.com/zongqi-wang/webdev_challenge/\">Check out the code</a> </li>\n          <li>|</li>\n          <li><a href=\"https://wangzongqi.com\">My Website</a> </li>\n          <li>|</li>\n          <li>&#169; Zongqi Wang 2021</li>\n        </ul>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}